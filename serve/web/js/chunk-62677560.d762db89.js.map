{"version":3,"sources":["webpack:///./node_modules/_marked@0.8.0@marked/src/helpers.js","webpack:///./node_modules/_marked@0.8.0@marked/src/rules.js","webpack:///./node_modules/_marked@0.8.0@marked/src/marked.js","webpack:///./node_modules/_marked@0.8.0@marked/src/TextRenderer.js","webpack:///./node_modules/_marked@0.8.0@marked/src/Slugger.js","webpack:///./node_modules/_marked@0.8.0@marked/src/defaults.js","webpack:///./node_modules/_marked@0.8.0@marked/src/Parser.js","webpack:///./node_modules/_marked@0.8.0@marked/src/Renderer.js","webpack:///./src/plugins/lineAndCopy.js","webpack:///./node_modules/_marked@0.8.0@marked/src/Lexer.js","webpack:///./node_modules/_marked@0.8.0@marked/src/InlineLexer.js"],"names":["escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","name","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","sanitize","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","silent","console","warn","module","exports","block","newline","code","fences","hr","heading","blockquote","list","def","nptable","table","lheading","_paragraph","text","_label","_title","bullet","item","_tag","_comment","paragraph","normal","gfm","pedantic","inline","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","Lexer","Parser","Renderer","TextRenderer","InlineLexer","Slugger","getDefaults","changeDefaults","defaults","marked","src","callback","Error","toString","highlight","tokens","pending","lex","done","err","out","parse","token","type","lang","message","options","setOptions","parser","lexer","inlineLexer","output","title","this","seen","value","slug","originalSlug","baseUrl","headerIds","headerPrefix","langPrefix","mangle","renderer","sanitizer","smartLists","smartypants","xhtml","newDefaults","slugger","links","inlineText","reverse","next","tok","pop","body","peek","depth","cell","j","header","tablecell","align","tablerow","ordered","start","loose","checked","task","nextToken","checkbox","parseText","listitem","errMsg","log","infostring","quote","raw","startatt","content","flags","addLineAndCopy","$","each","lines","$numbering","addClass","$copy","parent","append","click","siblings","element","select","document","execCommand","remove","Vue","$message","success","create","rules","top","cap","bull","listStart","listItems","t","space","isordered","istask","ischecked","lastToken","trimRight","codeBlockStyle","slice","join","undefined","pre","charCodeAt","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","escapes","codespan","image","Math","random"],"mappings":"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","file":"js/chunk-62677560.d762db89.js","sourcesContent":["/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} +')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","\nimport $ from 'jquery'\nimport Vue from 'vue'\nexport const addLineAndCopy = () => {\n\t//markdown代码存放在pre code 标签对中\n  $('pre code').each(function () {\n    let lines = $(this).text().split('\\n').length - 1\n    //添加有序列表\n    let $numbering = $('<ol/>').addClass('pre-numbering')\n    //添加复制按钮，此处使用的是element-ui icon 图标\n    let $copy = $('<i title=\"copy\"/>').addClass('el-icon-document-copy code-copy')\n    $(this)\n      .parent()\n      .addClass('code')\n      .append($numbering)\n      .append($copy)\n    for (let i = 0; i <= lines; i++) {\n      $numbering.append($('<li/>'))\n    }\n  })\n  //监听复制按钮点击事件\n  $('pre.code i.code-copy').click(e => {\n    let text = $(e.target).siblings('code').text()\n    let element = $('<textarea>' + text + '</textarea>')\n    $('body').append(element)\n    element[0].select()\n    document.execCommand('Copy')\n    element.remove()\n    //这里是自定义的消息通知组件\n    Vue.prototype.$message.success({\n      message: '代码复制成功'\n    })\n  })\n}\n\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize\n          ? this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0])\n          : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n"],"sourceRoot":""}